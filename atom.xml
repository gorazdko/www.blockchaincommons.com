<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://www.blockchaincommons.com/atom.xml" rel="self" type="application/atom+xml" /><link href="https://www.blockchaincommons.com/" rel="alternate" type="text/html" /><updated>2021-04-07T18:31:35+00:00</updated><id>https://www.blockchaincommons.com/atom.xml</id><title type="html">Blockchain Commons</title><subtitle>Supporting Open Blockchain Infrastructure, Internet Security &amp; Cryptographic Research</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><entry><title type="html">2020 Q4 Blockchain Commons Report</title><link href="https://www.blockchaincommons.com/quarterlies/2020-Q4-Report/" rel="alternate" type="text/html" title="2020 Q4 Blockchain Commons Report" /><published>2021-01-05T00:00:00+00:00</published><updated>2021-01-05T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/quarterlies/2020-Q4-Report</id><content type="html" xml:base="https://www.blockchaincommons.com/quarterlies/2020-Q4-Report/">&lt;p&gt;In Fall 2020, Blockchain Commons continued to work on creating architectures, specifications, and applications to support blockchain infrastructure.&lt;/p&gt;

&lt;p&gt;This has included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Releasing a trio of Gordian Cosigner apps;&lt;/li&gt;
  &lt;li&gt;Advancing wallet interoperability specifications in the Airgapped Wallet community that we host;&lt;/li&gt;
  &lt;li&gt;Researching new multisig specifications;&lt;/li&gt;
  &lt;li&gt;Releasing a third platform for our seedtool application;&lt;/li&gt;
  &lt;li&gt;Publishing Learning Bitcoin from the Command Line 2.0;&lt;/li&gt;
  &lt;li&gt;Debuting our new torgap architecture;&lt;/li&gt;
  &lt;li&gt;Organizing our reference crypto libraries and applications;&lt;/li&gt;
  &lt;li&gt;Starting a DID architecture review;&lt;/li&gt;
  &lt;li&gt;Working on Digital Identity laws; and&lt;/li&gt;
  &lt;li&gt;Starting our 2021 blockchain internship program.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s a bit more information on everything:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gordian Cosigner Releases.&lt;/strong&gt; We have released alpha versions of the entire Gordian Cosigner family of apps, for &lt;a href=&quot;https://github.com/BlockchainCommons/GordianSigner-Android&quot;&gt;Android&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/GordianSigner-Catalyst&quot;&gt;iOS&lt;/a&gt;, and &lt;a href=&quot;https://github.com/BlockchainCommons/GordianSigner-macOS&quot;&gt;MacOS&lt;/a&gt;. These applications support the signing of multisig transactions in an airgapped manner, creating a new level of support for what we see as the future of Bitcoin transactions. Though the iOS and MacOS apps were created in-house, the Android app was developed by Bitmark, who is both a sustaining and contributing sponsor to Blockchain Commons. We are expecting public Testflights of the apps in January, but before we have a full public release, we need to work with the Airgapped Wallet Community on related specifications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wallet Community Expansion.&lt;/strong&gt; We are continuing the successful collaboration with our &lt;a href=&quot;https://github.com/BlockchainCommons/Airgapped-Wallet-Community&quot;&gt;Airgapped Wallet Community&lt;/a&gt;, which has also given us a seat at the table for discussions of wallet standardization. Our Universal Resources (UR) specification and its animated QRs are increasingly being adopted, with our UR library now available in C++, Java, Python, Rust, and Swift. We’ve also been doing extensive work with Bitmark on their Autonomy wallet release, which is built on our Gordian architecture design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wallet Community Multisig Research.&lt;/strong&gt; Our early work with multisigs has shown that critical elements like the m/48’ derivation, PSBTs, and descriptors are all underspecified given modern bitcoin architecture. In addition, current multisig usage doesn’t include schemes to prevent xpub reuse or to secure internal metadata in support of cosigning. In conjuction with our wallet community, we are working on standardizing the methodology for creating account maps for multisig cosigning; investigating ways to store full wallet descriptors and metadata for multisigs without creating new privacy problems; and defining the different roles of multisig cosigners. Some multisig issues are UX-focused, and so we are also defining user interfaces that can help humans to make meaningful decisions when cosigning. This research has included a new release of our Swift-based &lt;a href=&quot;https://github.com/BlockchainCommons/LifeHashTool&quot;&gt;LifeHashTool&lt;/a&gt;. We hope to do more in Q1, to further enable Gordian Cosigner as our premiere multisig release.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seedtool Expansion.&lt;/strong&gt; Our seedtool apps, which offer best-practices examples of offline seed generation, continue to expand. We’d previously released a seedtool as part of our &lt;a href=&quot;https://github.com/BlockchainCommons/bc-lethekit&quot;&gt;LetheKit&lt;/a&gt; and upgraded the separate &lt;a href=&quot;https://github.com/BlockchainCommons/bc-seedtool-cli&quot;&gt;command-line version&lt;/a&gt; to beta last quarter. At this point our initial iterations of our seedtools are fully feature-complete, though we’re also planning for future versions with camera support. This quarter we also released an alpha for a third platform: an &lt;a href=&quot;https://github.com/BlockchainCommons/Fehu&quot;&gt;iOS seedtool&lt;/a&gt;, currently code-named Fehu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learning Bitcoin 2.0 Release.&lt;/strong&gt; As planned we released &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/README.md&quot;&gt;Learning Bitcoin from the Command Line 2.0&lt;/a&gt; at the end of October. Our popular Bitcoin tutorial is now a complete 19-chapter course that starts with the fundamentals of Bitcoin Core usage and continues on through using Lightning and programming in seven languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Torgap Architectural Focus.&lt;/strong&gt; Blockchain Commons is not just about specifications, tutorials, and applications, but also architectures. We want to prototype and exemplify the best methods for creating safe, secure, and private Bitcoin and blockchain systems. This quarter we went public with our work on Torgap, which is a new methodology to ensure separation of interests (&lt;a href=&quot;https://github.com/BlockchainCommons/torgap/blob/master/Docs/FAQ.md#what-are-the-adventages-of-the-torgap-architecture&quot;&gt;and lots of other advantages&lt;/a&gt;) by using Tor to segregate neworked services. Not only have we created a &lt;a href=&quot;https://github.com/BlockchainCommons/torgap/blob/master/Docs/FAQ.md&quot;&gt;Torgap&lt;/a&gt; repo as a nexus for the work, but we’ve also been looking at varied Torgap possibilities, including &lt;a href=&quot;https://github.com/BlockchainCommons/torgap-sig-cli-rust&quot;&gt;DIDs over Torgaps&lt;/a&gt; using a &lt;a href=&quot;https://github.com/BlockchainCommons/did-method-onion&quot;&gt;did:onion method&lt;/a&gt; and &lt;a href=&quot;https://github.com/BlockchainCommons/torgap-opentimestamps/blob/master/README.md&quot;&gt;open timestamps over Torgaps&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Crypto Commons Reference Code.&lt;/strong&gt; We’ve created a large amount of content at Blockchain Commons, and so one of our challenges is making it accessible. We did this in Q4 not just through our core Torgap repo, but also through a similar &lt;a href=&quot;https://github.com/BlockchainCommons/crypto-commons&quot;&gt;Crypto Commons repo&lt;/a&gt;. It links up all of our crypto reference libraries (which went beta in Q3) as well as the various apps and command-line programs that exercise them, including the new &lt;a href=&quot;https://github.com/BlockchainCommons/bc-bytewords-cli&quot;&gt;bytewords-cli&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Architectural Review Begun.&lt;/strong&gt; Blockchain Commons also does more direct work with companies to improve the usage and trust for blockchain systems. This quarter we have begun a security architecture review of a major Decentralized IDentifier (DID) deployment that should reach one million or more people. We’ve been involved with DIDs since they were incubated at &lt;a href=&quot;https://www.weboftrust.info/papers.html&quot;&gt;Rebooting the Web of Trust&lt;/a&gt;, so we’re proud to do the first major review of such a system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Decentralized Identity Evangelization.&lt;/strong&gt; Christopher Allen is continuing his work with the Wyoming legislature, where he is now a member of Digital Identity and DAO subcomittees. He’s been working on what will be the first laws anywhere to recognize personal digital identity (as opposed to digital data, which is the focus of many current laws). This legal definition is intended to work with legacy identity systems, but also to support future decentralization. He also has been leading another bill to give special legal protection for private keys.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trusted Processor Research.&lt;/strong&gt; We are always researching and analyzing the newest cryptography and blockchain innovations. This quarter that included an examination of trusted processors. We hope to advance that toward interoperable specifications for trusted hardware in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Internship Planning.&lt;/strong&gt; Finally, we are planning for new intern cohorts for 2021. We have posted a &lt;a href=&quot;https://github.com/BlockchainCommons/Community/discussions/32&quot;&gt;complete announcement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For other recent announcements, see:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blockchaincommons.com/quarterlies/2020-Q3-Report/&quot;&gt;The Q3 Quarterly Report (10/6)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blockchaincommons.com/projects/Releasing-LetheKit/&quot;&gt;Blockchain Releases Feature-complete LetheKit (10/28)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blockchaincommons.com/projects/Learning-Bitcoin-Upgrades-to-v2/&quot;&gt;Learning Bitcoin Upgrades to v2 (10/30)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blockchaincommons.com/partnerships/BCC-Joins-COPA/&quot;&gt;Blockchain Commons Joins COPA (11/10)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blockchaincommons.com/projects/Blockchain-Commons-URs-Support-Airgapped-PSBTs/&quot;&gt;Blockchain Commons’ Uniform Resources (URs) Support Airgapped PSBTs &amp;amp; More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you’d like to support our work at Blockchain Commons, so that we can create the next specifications, architectures, reference applications, and reference libraries to be used by the whole community, please become a &lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;sponsor&lt;/a&gt;. You can alternatively &lt;a href=&quot;https://btcpay.blockchaincommons.com/&quot;&gt;make a one-time bitcoin donation at our BTCPay&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to our sustaining sponsors, Bitmark, Blockchainbird, and Unchained Capital, as well as our GitHub Sponsors, including Flip Abignale (@flip-btcmag), Dario (@mytwocentimes), Foundation Devices (@Foundation-Devices), Adrian Gropper (@agropper),  Zach Herbert (@zachherbert), Eric Kuhn (@erickuhn19), Alexandre Linhares (@Alex-Linhares), Trent McConaghy (@trentmc), Mark S. Miller (@erights), @modl21,  Protocol Labs (@protocol),  Dan Trevino (@dantrevino), and Glenn Willen (@gwillen).&lt;/p&gt;

&lt;p&gt;Christopher Allen, Executive Director, Blockchain Common&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Quarterlies" /><category term="Goals" /><category term="Philosophies" /><category term="Projects" /><summary type="html">In Fall 2020, Blockchain Commons continued to work on creating architectures, specifications, and applications to support blockchain infrastructure. This has included: Releasing a trio of Gordian Cosigner apps; Advancing wallet interoperability specifications in the Airgapped Wallet community that we host; Researching new multisig specifications; Releasing a third platform for our seedtool application; Publishing Learning Bitcoin from the Command Line 2.0; Debuting our new torgap architecture; Organizing our reference crypto libraries and applications; Starting a DID architecture review; Working on Digital Identity laws; and Starting our 2021 blockchain internship program. Here’s a bit more information on everything: Gordian Cosigner Releases. We have released alpha versions of the entire Gordian Cosigner family of apps, for Android, iOS, and MacOS. These applications support the signing of multisig transactions in an airgapped manner, creating a new level of support for what we see as the future of Bitcoin transactions. Though the iOS and MacOS apps were created in-house, the Android app was developed by Bitmark, who is both a sustaining and contributing sponsor to Blockchain Commons. We are expecting public Testflights of the apps in January, but before we have a full public release, we need to work with the Airgapped Wallet Community on related specifications. Wallet Community Expansion. We are continuing the successful collaboration with our Airgapped Wallet Community, which has also given us a seat at the table for discussions of wallet standardization. Our Universal Resources (UR) specification and its animated QRs are increasingly being adopted, with our UR library now available in C++, Java, Python, Rust, and Swift. We’ve also been doing extensive work with Bitmark on their Autonomy wallet release, which is built on our Gordian architecture design. Wallet Community Multisig Research. Our early work with multisigs has shown that critical elements like the m/48’ derivation, PSBTs, and descriptors are all underspecified given modern bitcoin architecture. In addition, current multisig usage doesn’t include schemes to prevent xpub reuse or to secure internal metadata in support of cosigning. In conjuction with our wallet community, we are working on standardizing the methodology for creating account maps for multisig cosigning; investigating ways to store full wallet descriptors and metadata for multisigs without creating new privacy problems; and defining the different roles of multisig cosigners. Some multisig issues are UX-focused, and so we are also defining user interfaces that can help humans to make meaningful decisions when cosigning. This research has included a new release of our Swift-based LifeHashTool. We hope to do more in Q1, to further enable Gordian Cosigner as our premiere multisig release. Seedtool Expansion. Our seedtool apps, which offer best-practices examples of offline seed generation, continue to expand. We’d previously released a seedtool as part of our LetheKit and upgraded the separate command-line version to beta last quarter. At this point our initial iterations of our seedtools are fully feature-complete, though we’re also planning for future versions with camera support. This quarter we also released an alpha for a third platform: an iOS seedtool, currently code-named Fehu. Learning Bitcoin 2.0 Release. As planned we released Learning Bitcoin from the Command Line 2.0 at the end of October. Our popular Bitcoin tutorial is now a complete 19-chapter course that starts with the fundamentals of Bitcoin Core usage and continues on through using Lightning and programming in seven languages. Torgap Architectural Focus. Blockchain Commons is not just about specifications, tutorials, and applications, but also architectures. We want to prototype and exemplify the best methods for creating safe, secure, and private Bitcoin and blockchain systems. This quarter we went public with our work on Torgap, which is a new methodology to ensure separation of interests (and lots of other advantages) by using Tor to segregate neworked services. Not only have we created a Torgap repo as a nexus for the work, but we’ve also been looking at varied Torgap possibilities, including DIDs over Torgaps using a did:onion method and open timestamps over Torgaps. Crypto Commons Reference Code. We’ve created a large amount of content at Blockchain Commons, and so one of our challenges is making it accessible. We did this in Q4 not just through our core Torgap repo, but also through a similar Crypto Commons repo. It links up all of our crypto reference libraries (which went beta in Q3) as well as the various apps and command-line programs that exercise them, including the new bytewords-cli. Architectural Review Begun. Blockchain Commons also does more direct work with companies to improve the usage and trust for blockchain systems. This quarter we have begun a security architecture review of a major Decentralized IDentifier (DID) deployment that should reach one million or more people. We’ve been involved with DIDs since they were incubated at Rebooting the Web of Trust, so we’re proud to do the first major review of such a system. Decentralized Identity Evangelization. Christopher Allen is continuing his work with the Wyoming legislature, where he is now a member of Digital Identity and DAO subcomittees. He’s been working on what will be the first laws anywhere to recognize personal digital identity (as opposed to digital data, which is the focus of many current laws). This legal definition is intended to work with legacy identity systems, but also to support future decentralization. He also has been leading another bill to give special legal protection for private keys. Trusted Processor Research. We are always researching and analyzing the newest cryptography and blockchain innovations. This quarter that included an examination of trusted processors. We hope to advance that toward interoperable specifications for trusted hardware in the future. Internship Planning. Finally, we are planning for new intern cohorts for 2021. We have posted a complete announcement. For other recent announcements, see: The Q3 Quarterly Report (10/6) Blockchain Releases Feature-complete LetheKit (10/28) Learning Bitcoin Upgrades to v2 (10/30) Blockchain Commons Joins COPA (11/10) Blockchain Commons’ Uniform Resources (URs) Support Airgapped PSBTs &amp;amp; More If you’d like to support our work at Blockchain Commons, so that we can create the next specifications, architectures, reference applications, and reference libraries to be used by the whole community, please become a sponsor. You can alternatively make a one-time bitcoin donation at our BTCPay. Thanks to our sustaining sponsors, Bitmark, Blockchainbird, and Unchained Capital, as well as our GitHub Sponsors, including Flip Abignale (@flip-btcmag), Dario (@mytwocentimes), Foundation Devices (@Foundation-Devices), Adrian Gropper (@agropper), Zach Herbert (@zachherbert), Eric Kuhn (@erickuhn19), Alexandre Linhares (@Alex-Linhares), Trent McConaghy (@trentmc), Mark S. Miller (@erights), @modl21, Protocol Labs (@protocol), Dan Trevino (@dantrevino), and Glenn Willen (@gwillen). Christopher Allen, Executive Director, Blockchain Common</summary></entry><entry><title type="html">Blockchain Commons’ Uniform Resources (URs) Support Airgapped PSBTs &amp;amp; More</title><link href="https://www.blockchaincommons.com/projects/Blockchain-Commons-URs-Support-Airgapped-PSBTs/" rel="alternate" type="text/html" title="Blockchain Commons’ Uniform Resources (URs) Support Airgapped PSBTs &amp;amp; More" /><published>2020-12-08T00:00:00+00:00</published><updated>2020-12-08T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/projects/Blockchain-Commons-URs-Support-Airgapped-PSBTs</id><content type="html" xml:base="https://www.blockchaincommons.com/projects/Blockchain-Commons-URs-Support-Airgapped-PSBTs/">&lt;p&gt;The &lt;a href=&quot;https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-005-ur.md&quot;&gt;Uniform Resources specification&lt;/a&gt; is one of Blockchain Commons’ most notable wallet enhancements of 2020: it enables airgapped PSBTs and is supported through a variety of reference libraries, including C++ and Swift implementations. Third parties have already ported the UR encoder to Python, Java, and Rust.&lt;/p&gt;

&lt;p&gt;Uniform Resources, or URs, are a method for encoding binary data in plain text strings that are also well-formed URIs. They are simultaneously intended to address the challenges of QR codes, which are the main way that Bitcoin wallets transmit  data across airgaps. While QR codes themselves are standard, the data encoded within QR codes is not, resulting in inconsistent usage among developers.&lt;/p&gt;

&lt;p&gt;URs were created to resolve these interoperability issues by creating a standardized method for encoding binary data. They’re built on CBOR, the Concise Binary Object Representation described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7049&quot;&gt;IETF RFC 7049&lt;/a&gt;. The CBOR data is encoded in a typed UR object, which creates a self-describing, structured binary representation. URs can be transmitted as text or encoded via other means, including QR codes. Once received, URs can be decoded by different apps on different machines without having to guess about the contents or the encoding methods.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The tight size limitations of QRs, where version 40 QR codes max out at 2,953 bytes, are also resolved in the UR specification. The CBOR foundation supports sizes up to 2^32-1 bytes; the UR specification then describes how to sequence those large binary encodings into a multipart UR, which can be displayed across multiple QR codes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BlockchainCommons/URDemo/master/Images/urdemo-animated.gif&quot; align=&quot;right&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thus far, the prime use of URs has been to allow the airgapped transmission of PSBTs, which frequently don’t fit into a single QR code. Using URs, PSBTs can instead be transmitted as a animated sequence of QR codes, with each frame displaying one part of a UR sequence. Fountain codes allow the QR recording to start at any point and resolve problems with missing individual frames. This permits for the easy and intuitive transmission of partially signed transactions to airgapped devices for further signing: a user just needs to hold up a camera to scan the animated QR.&lt;/p&gt;

&lt;p&gt;However, URs can do much more than that: they can support any airgapped Bitcoin function, as well as Blockchain Commons’ unique &lt;a href=&quot;https://github.com/BlockchainCommons/torgap/blob/master/Docs/FAQ.md&quot;&gt;torgap architecture&lt;/a&gt;. Definitions for seeds, keypaths, addresses, and accounts allow for all sorts of Bitcoin data to be transmitted in the efficient, self-describing format. In additions, URs can be sent not just as QR codes, but also as URLs or Signal Whispers. The possibilities go far beyond animated QRs for PSBTs.&lt;/p&gt;

&lt;p&gt;As a creator of open infrastructure, Blockchain Commons is working to support wallet interoperability, helping end-users have many flexible choices among vendors. URs are one of our earliest and most successful open wallet projects. Our &lt;a href=&quot;https://github.com/BlockchainCommons/bc-ur&quot;&gt;bc-ur reference library&lt;/a&gt; supports URs in C++, while our &lt;a href=&quot;https://github.com/BlockchainCommons/URKit&quot;&gt;URKit&lt;/a&gt; does so in Swift. The specification has also been adopted by a number of third-party wallet developers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Foundation Devices, a company that focuses on open hardware for the decentralized internet, has created a &lt;a href=&quot;https://github.com/Foundation-Devices/foundation-ur-py&quot;&gt;python implementation&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Sparrow Wallet, a Bitcoin wallet for those who value financial self sovereignty, has created a &lt;a href=&quot;https://github.com/sparrowwallet/hummingbird&quot;&gt;java implementation&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Dominik Spicher has created a &lt;a href=&quot;https://github.com/dspicher/ur-rs&quot;&gt;rust implementation&lt;/a&gt;.
We expect to see URs deployed in more commercial wallets in the near future.&lt;/li&gt;
&lt;/ul&gt;

&lt;table style=&quot;border:0px solid black;margin-left:auto;margin-right:auto;&quot;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://foundationdevices.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BlockchainCommons/www.blockchaincommons.com/master/images/airgap/foundation-logo.png&quot; /&gt;&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://sparrowwallet.com/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BlockchainCommons/www.blockchaincommons.com/master/images/airgap/sparrowwallet-logo-sm.png&quot; /&gt;&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;If you’d like to learn more about URs, please read our &lt;a href=&quot;https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-005-ur.md&quot;&gt;research paper, BCR-2020-005&lt;/a&gt;, and our &lt;a href=&quot;https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-006-urtypes.md&quot;&gt;growing library of UR type definitions&lt;/a&gt;. If you’d like to support Blockchain Commons’ open infrastructure development, please become a &lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;GitHub sponsor&lt;/a&gt; or make a donation to our &lt;a href=&quot;https://btcpay.blockchaincommons.com/&quot;&gt;BTCPay server&lt;/a&gt;. Blockchain Commons is funded entirely by patronage, donations, and collaborative partnerships with people like you.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Projects" /><category term="AirGap" /><category term="URs" /><category term="Projects" /><summary type="html">The Uniform Resources specification is one of Blockchain Commons’ most notable wallet enhancements of 2020: it enables airgapped PSBTs and is supported through a variety of reference libraries, including C++ and Swift implementations. Third parties have already ported the UR encoder to Python, Java, and Rust. Uniform Resources, or URs, are a method for encoding binary data in plain text strings that are also well-formed URIs. They are simultaneously intended to address the challenges of QR codes, which are the main way that Bitcoin wallets transmit data across airgaps. While QR codes themselves are standard, the data encoded within QR codes is not, resulting in inconsistent usage among developers. URs were created to resolve these interoperability issues by creating a standardized method for encoding binary data. They’re built on CBOR, the Concise Binary Object Representation described in IETF RFC 7049. The CBOR data is encoded in a typed UR object, which creates a self-describing, structured binary representation. URs can be transmitted as text or encoded via other means, including QR codes. Once received, URs can be decoded by different apps on different machines without having to guess about the contents or the encoding methods.</summary></entry><entry><title type="html">Blockchain Commons Joins COPA</title><link href="https://www.blockchaincommons.com/partnerships/BCC-Joins-COPA/" rel="alternate" type="text/html" title="Blockchain Commons Joins COPA" /><published>2020-11-10T00:00:00+00:00</published><updated>2020-11-10T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/partnerships/BCC-Joins-COPA</id><content type="html" xml:base="https://www.blockchaincommons.com/partnerships/BCC-Joins-COPA/">&lt;link rel=&quot;image_src&quot; href=&quot;https://www.blockchaincommons.com/images/copa-logo-small.png&quot; /&gt;

&lt;p&gt;&lt;img src=&quot;https://www.blockchaincommons.com/images/copa-logo-small.png&quot; width=&quot;350&quot; align=&quot;right&quot; /&gt;
To fulfill its commitment to open source and to a defensive patent strategy, Blockchain Commons has joined COPA, the Cryptocurrency Open Patent Alliance.&lt;/p&gt;

&lt;p&gt;COPA is a non-profit community that was formed by Square out of concern that misguided and offensive use of patents can stifle innovation, and that companies not focused on patent creation themselves would be unable to defend themselves from aggressive (often non-practicing) patent holders. Members of COPA pledge not to use their patents offensively and instead pool their crypto-patents to form a shared patent library.&lt;/p&gt;

&lt;p&gt;Blockchain Commons was resolute in joining COPA because it addresses problems and resolves frustrations that Commons Founder Christopher Allen has long observed with the American patent system.&lt;/p&gt;

&lt;div class=&quot;bold--excerpt--node&quot;&gt;Read More&lt;/div&gt;
&lt;!--more--&gt;

&lt;p&gt;The issues with crypto patents date back to the early days of the cryptography industry, when companies were unable to engage in public-key cryptography without an RSA patent license, which was expensive and difficult to obtain. RSA was a practicing owner of its patents, and it did promise FRAND (fair, reasonable, and non-discriminatory) licenses, but these licenses were still too expensive for open-source projects. In order to support the SSL standard, as well as the TLS standard that he was then coauthoring, Allen created the RSAREF license, which sublicensed RSA’s patents in a way that met FRAND standards, and which was royalty-free for the first $50,000 — enabling open-source projects, which tended to be revenue-free. This resulted in RSAREF licensees like PGP and Red Hat being able to innovate with public-key cryptography.&lt;/p&gt;

&lt;p&gt;Allen has also seen the issue of patents from the other side. When he worked at Certicom, he oversaw a large library of patents and was able to advance the idea of ethical patent usage: he convinced the executive team at Certicom to adopt an internal policy to offer FRAND licenses for the patents they were actively practicing and to use their other patents only for defensive purposes.&lt;/p&gt;

&lt;p&gt;However, even a company like Certicom was unable to avoid all of the problems with patents, particularly those caused by non-practicing patent owners. Though Allen was interested in advancing digital microcurrencies at Certicom, he was stifled by patents for Merkle trees and Schnorr signatures. Certicom’s cryptocurrency work was stalled, and new innovations in the field, such as Bitcoin, only appeared after the patents expired, the last in 2008.&lt;/p&gt;

&lt;p&gt;Fortunately, the entire industry is moving toward an understanding of the problems caused by the patent system. At Blockstream, Allen was proud to see the company take a very progressive path when they made a public defensive patent pledge for their entire patent portfolio, which also ensured continuity in the case of bankruptcy. The next step would have been creating a patent pool among companies, but unfortunately Allen was stymied at the time by large companies being unwilling to join such a pool.&lt;/p&gt;

&lt;p&gt;Allen’s commitment to an open and defensive patent policy has continued at Blockchain Commons, and so he’s delighted that Square has used its prominent position in the industry to spearhead the COPA initiative, ensuring continued innovation in the blockchain, Bitcoin, and cryptocurrency fields, without the fear of frivolous patent lawsuits. This is why Blockchain Commons joined COPA as an early adopter.&lt;/p&gt;

&lt;p&gt;More information on COPA is available at &lt;a href=&quot;https://open-patent.org/&quot;&gt;open-patent.org&lt;/a&gt;; more information on Blockchain Commons is available at &lt;a href=&quot;https://www.blockchaincommons.com/&quot;&gt;blockchaincommons.com&lt;/a&gt;.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Partnerships" /><category term="Philosophies" /><category term="Patents" /><category term="COPA" /><summary type="html">To fulfill its commitment to open source and to a defensive patent strategy, Blockchain Commons has joined COPA, the Cryptocurrency Open Patent Alliance. COPA is a non-profit community that was formed by Square out of concern that misguided and offensive use of patents can stifle innovation, and that companies not focused on patent creation themselves would be unable to defend themselves from aggressive (often non-practicing) patent holders. Members of COPA pledge not to use their patents offensively and instead pool their crypto-patents to form a shared patent library. Blockchain Commons was resolute in joining COPA because it addresses problems and resolves frustrations that Commons Founder Christopher Allen has long observed with the American patent system. Read More</summary></entry><entry><title type="html">Learning Bitcoin Upgrades to v2.0</title><link href="https://www.blockchaincommons.com/projects/Learning-Bitcoin-Upgrades-to-v2/" rel="alternate" type="text/html" title="Learning Bitcoin Upgrades to v2.0" /><published>2020-10-30T00:00:00+00:00</published><updated>2020-10-30T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/projects/Learning-Bitcoin-Upgrades-to-v2</id><content type="html" xml:base="https://www.blockchaincommons.com/projects/Learning-Bitcoin-Upgrades-to-v2/">&lt;p&gt;&lt;img src=&quot;https://www.blockchaincommons.com/images/projects/lbtc-screen.png&quot; width=&quot;350&quot; align=&quot;right&quot; /&gt;
Blockchain Commons has recently released v2.0 of our Learning Bitcoin from the Command Line course.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/README.md&quot;&gt;Visit the Course&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;Support the Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning Bitcoin was one of our first projects, launched back in 2017 with support from Blockstream. The intent of the course was to teach the fundamentals of Bitcoin programming through &lt;a href=&quot;https://bitcoin.org/en/&quot;&gt;Bitcoin Core&lt;/a&gt; and its RPC-based command-line interface. We chose this methodology because Bitcoin Core is one of the most robust, secure, and safe cryptocurrency interfaces in existence. We believe it’s the solid foundation for programming Bitcoin; it also allows you to interact with Bitcoin in a way that teaches the fundamentals.&lt;/p&gt;

&lt;p&gt;Blockchain Commons’ overarcing goal has always been to improve the open infrastructure of the blockchain industry, and one of the ways to do that is to build the next generation of engineers. Our course was very successful in this regard. It has helped Bitcoin novices to become Bitcoin developers: some have created their own open-source projects and others have been hired for entry-level jobs. Some of Blockchain Commons’ own engineers, including many of our interns, got their start with the Learning Bitcoin course. Even GitHub’s raw numbers reveal the interest in the course, with 100 Watches, 350 Forks, and 1300 Stars.&lt;/p&gt;

&lt;p&gt;However, Bitcoin is still undergoing rapid development, which led to the need for v2.0 of the course, to update it for the most recent releases &lt;a href=&quot;https://bitcoin.org/en/release/v0.20.0&quot;&gt;Bitcoin 0.20.0&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://bitcoin.org/en/release/v0.20.1&quot;&gt;0.20.1&lt;/a&gt;: every example in the course has been updated and revised accordingly. The updated course has also has been expanded to include a number of new topics. New sections discuss wallet descriptors, SegWit, and how SegWit’s new transaction types interact with Bitcoin Scripts. We’ve also added new chapters for larger topics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A chapter on &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/07_0_Expanding_Bitcoin_Transactions_PSBTs.md&quot;&gt;PSBTs&lt;/a&gt; looks at Partially Signed Bitcoin Transactions as well as how they can be used with Bitcoin Core’s Hardware Interface.&lt;/li&gt;
  &lt;li&gt;Though our focus is on the command-line interface, we also show how to create simple C programs to talk to Bitcoin Core using &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/15_0_Talking_to_Bitcoind.md&quot;&gt;RPC and ZMQ (zeromq.org) libraries&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Libwally from Blockstream is a great library to use with command-line programs, so &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/16_0_Programming_with_Libwally.md&quot;&gt;another new Chapter&lt;/a&gt; covers leveraging its wallet and other cryptographic features.&lt;/li&gt;
  &lt;li&gt;We also touch upon RPC programming in &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/17_0_Talking_to_Bitcoind_Other.md&quot;&gt;Go, Java, NodeJS, Python, Rust, and Swift&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Finally, we’re proud to present our first look at using the Lightning Network from the command-line interface, focusing on Blockstream’s C-Lightning, in a &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/18_0_Understanding_Your_Lightning_Setup.md&quot;&gt;two&lt;/a&gt; &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line/blob/master/19_0_Using_Lightning.md&quot;&gt;chapter&lt;/a&gt; finale to the book.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bitcoin is quickly evolving, but the Learning Bitcoin course from Blockchain Commons is now updated to teach all about its newest concepts. If you’re a novice looking to learn about programming Bitcoin, an educator needing to teach students blockchain technologies, or an expert wanting to help us by reviewing, adding to, or translating the course, please take a look!&lt;/p&gt;

&lt;p&gt;However, we need your support. Where v1 of Learning Bitcoin was largely sponsored by Blockstream, v2 was done with our own resources. We hope that you can help us recoup those costs, so that we can continue to create open infrastructure of all sorts. If you think that education resources of this sort are important, please become an &lt;a href=&quot;https://www.blockchaincommons.com/sponsors.html&quot;&gt;Sustaining Sponsor&lt;/a&gt;, or if you prefer, make a one-time donation at our &lt;a href=&quot;https://btcpay.blockchaincommons.com/&quot;&gt;BTCPay&lt;/a&gt;. As an individual, you can join as one of our many &lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;individual sponsors&lt;/a&gt; to financially support future development of Learning Bitcoin, other educational resources, and open infrastructure.&lt;/p&gt;

&lt;p&gt;Thank you for your help in improving our techological commons for blockchain and Bitcoin users!&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Projects" /><category term="Educational" /><category term="Learning-Bitcoin" /><category term="Projects" /><summary type="html">Blockchain Commons has recently released v2.0 of our Learning Bitcoin from the Command Line course. Visit the Course Support the Course Learning Bitcoin was one of our first projects, launched back in 2017 with support from Blockstream. The intent of the course was to teach the fundamentals of Bitcoin programming through Bitcoin Core and its RPC-based command-line interface. We chose this methodology because Bitcoin Core is one of the most robust, secure, and safe cryptocurrency interfaces in existence. We believe it’s the solid foundation for programming Bitcoin; it also allows you to interact with Bitcoin in a way that teaches the fundamentals. Blockchain Commons’ overarcing goal has always been to improve the open infrastructure of the blockchain industry, and one of the ways to do that is to build the next generation of engineers. Our course was very successful in this regard. It has helped Bitcoin novices to become Bitcoin developers: some have created their own open-source projects and others have been hired for entry-level jobs. Some of Blockchain Commons’ own engineers, including many of our interns, got their start with the Learning Bitcoin course. Even GitHub’s raw numbers reveal the interest in the course, with 100 Watches, 350 Forks, and 1300 Stars. However, Bitcoin is still undergoing rapid development, which led to the need for v2.0 of the course, to update it for the most recent releases Bitcoin 0.20.0 &amp;amp; 0.20.1: every example in the course has been updated and revised accordingly. The updated course has also has been expanded to include a number of new topics. New sections discuss wallet descriptors, SegWit, and how SegWit’s new transaction types interact with Bitcoin Scripts. We’ve also added new chapters for larger topics: A chapter on PSBTs looks at Partially Signed Bitcoin Transactions as well as how they can be used with Bitcoin Core’s Hardware Interface. Though our focus is on the command-line interface, we also show how to create simple C programs to talk to Bitcoin Core using RPC and ZMQ (zeromq.org) libraries. Libwally from Blockstream is a great library to use with command-line programs, so another new Chapter covers leveraging its wallet and other cryptographic features. We also touch upon RPC programming in Go, Java, NodeJS, Python, Rust, and Swift. Finally, we’re proud to present our first look at using the Lightning Network from the command-line interface, focusing on Blockstream’s C-Lightning, in a two chapter finale to the book. Bitcoin is quickly evolving, but the Learning Bitcoin course from Blockchain Commons is now updated to teach all about its newest concepts. If you’re a novice looking to learn about programming Bitcoin, an educator needing to teach students blockchain technologies, or an expert wanting to help us by reviewing, adding to, or translating the course, please take a look! However, we need your support. Where v1 of Learning Bitcoin was largely sponsored by Blockstream, v2 was done with our own resources. We hope that you can help us recoup those costs, so that we can continue to create open infrastructure of all sorts. If you think that education resources of this sort are important, please become an Sustaining Sponsor, or if you prefer, make a one-time donation at our BTCPay. As an individual, you can join as one of our many individual sponsors to financially support future development of Learning Bitcoin, other educational resources, and open infrastructure. Thank you for your help in improving our techological commons for blockchain and Bitcoin users!</summary></entry><entry><title type="html">Blockchain Commons Releases Feature-complete LetheKit</title><link href="https://www.blockchaincommons.com/projects/Releasing-LetheKit/" rel="alternate" type="text/html" title="Blockchain Commons Releases Feature-complete LetheKit" /><published>2020-10-28T00:00:00+00:00</published><updated>2020-10-28T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/projects/Releasing-LetheKit</id><content type="html" xml:base="https://www.blockchaincommons.com/projects/Releasing-LetheKit/">&lt;p&gt;Blockchain Commons has released a feature-complete version of LetheKit, a do-it-yourself hardware platform that allows you to conduct cryptographic operations on an airgapped device. Complete information for creating your own LetheKit and downloading its software can be found in Blockchain Commons’ LetheKit repo.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BlockchainCommons/bc-lethekit&quot;&gt;Visit LetheKit Repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OSTQthcxsh0&quot;&gt;View LetheKit Video&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;Support LetheKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because you build LetheKit yourself and use open-source software, you know everything about your kit, and can depend on it for safe Bitcoin seed generation.&lt;/p&gt;

&lt;!--more--&gt;

&lt;center&gt;
  &lt;img src=&quot;https://www.blockchaincommons.com/images/projects/lethekit.jpg&quot; align=&quot;center&quot; /&gt;
&lt;/center&gt;

&lt;p&gt;To show how easy it is to use the LetheKit to generate seeds for use in Bitcoin, LetheKit maintainer Gorazd Kovacic has recently released a short video. As it demonstrates, all you need to do is roll dice or generate hardware entropy, and the LetheKit will use that to generate truly random seeds. You can then display a Uniform Resource (UR) or a QR code, export HD keys, or convert your seed into BIP39 mnemonics or SSKR shards. The LetheKit is very versatile!&lt;/p&gt;

&lt;p&gt;Whenever you turn off LetheKit, it safely erases its memory, just like the river Lethe. You can then restore from an external source. Our suggestion is that you maintain #SmartCustody of your new keys by engraving them into stainless steel. This will ensure their resilience, and that they can’t be easily lost.&lt;/p&gt;

&lt;p&gt;Thanks to Ken Sedgwick for his creation of the LetheKit and to Gorazd Kovacic for his continued maintenance. The project is part of Blockchain Commons’ focus on &lt;a href=&quot;https://www.smartcustody.com/index.html&quot;&gt;#SmartCustody&lt;/a&gt;, which teaches that the best way to protect cryptocurrency keys is to keep them offline: LetheKit ensures that your seeds never touch a connected device.&lt;/p&gt;

&lt;p&gt;Other Blockchain Commons projects such as the &lt;a href=&quot;https://github.com/BlockchainCommons/Gordian&quot;&gt;Gordian system&lt;/a&gt; follow this same philosophy, effortlessly dividing up your cryptocurrency between a connected node and an air-gapped mobile device. The two projects even work together. You can export keys from LetheKit and import them into your Gordian Wallet!&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/gorazdko&quot;&gt;@gorazdko&lt;/a&gt; for the latest on LetheKit and &lt;a href=&quot;https://twitter.com/blockchaincomns&quot;&gt;@BlockchainComns&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/ChristopherA&quot;&gt;@ChristopherA&lt;/a&gt; for the rest of the Blockchain Commons work!&lt;/p&gt;

&lt;p&gt;Please also consider &lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;becoming a patron of Blockchain Commons&lt;/a&gt;; we are only able to continue this open-infrastructure work with your support.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Projects" /><category term="AirGap" /><category term="LetheKit" /><category term="Projects" /><summary type="html">Blockchain Commons has released a feature-complete version of LetheKit, a do-it-yourself hardware platform that allows you to conduct cryptographic operations on an airgapped device. Complete information for creating your own LetheKit and downloading its software can be found in Blockchain Commons’ LetheKit repo. Visit LetheKit Repo View LetheKit Video Support LetheKit Because you build LetheKit yourself and use open-source software, you know everything about your kit, and can depend on it for safe Bitcoin seed generation.</summary></entry><entry><title type="html">2020 Q3 Blockchain Commons Report</title><link href="https://www.blockchaincommons.com/quarterlies/2020-Q3-Report/" rel="alternate" type="text/html" title="2020 Q3 Blockchain Commons Report" /><published>2020-10-06T00:00:00+00:00</published><updated>2020-10-06T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/quarterlies/2020-Q3-Report</id><content type="html" xml:base="https://www.blockchaincommons.com/quarterlies/2020-Q3-Report/">&lt;p&gt;In summer 2020 (Q3), Blockchain Commons really came together as both a professional organization and as a collective to support open infrastructure for blockchain.&lt;/p&gt;

&lt;p&gt;This quarter, in addition to the ongoing financial contributions from our Sustaining Patrons, we’ve begun receiving our first funds from &lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;Github Sponsors&lt;/a&gt;, which has totaled more than $8,000 to date, including mostly contributions from small sponsors. We’ve in turn been able to use those additional funds on a wider variety of projects. Simultaneously, we’ve also been revising our vision, strategy, marketing, and branding plan, to both set the future of Blockchain Commons and to explain its benefits to the wider world.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In summary, this quarter we:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;graduated five interns;&lt;/li&gt;
  &lt;li&gt;beta-released our crypto libraries and our Seedtool;&lt;/li&gt;
  &lt;li&gt;debuted the Spotbit price system, keytool, and URkit;&lt;/li&gt;
  &lt;li&gt;dramatically progressed our Gordian system of linked full node and wallet;&lt;/li&gt;
  &lt;li&gt;established a wallet standards development community;&lt;/li&gt;
  &lt;li&gt;neared completion of Learning Bitcoin from the Command Line v2 and LetheKit v2;&lt;/li&gt;
  &lt;li&gt;supported open development &amp;amp; infrastructure;&lt;/li&gt;
  &lt;li&gt;and testified about legislation and regulations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s more information on some of our biggest successes this summer:&lt;/p&gt;

&lt;p&gt;SUMMER INTERNS. We had a great success with our first internship program, which is intended to not only support Blockchain Commons priorities but also to train the next generation of developers for the industry. This year, out of more than 30 applicants, we brought in eight, five of whom finished their entire internship. They are: Gautham Ganesh Elango from Australia, Gorazd Kovacic from Slovenia, Christian Murray of Dartmouth, Nishit Shah, and Javier Vargas. Not only did they support some of our other priorities this quarter, but we also did our best to teach them about blockchain and business alike.&lt;/p&gt;

&lt;p&gt;We received some good publicity for our efforts, and plan to offer more internships in the future:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://decrypt.co/34555/how-bitcoin-dev-hub-building-future-free-software&quot;&gt;How a Bitcoin Dev Hub is Building a Future for Free Software (Decrypt)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coindesk.com/blockchain-commons-interns-open-source-developers&quot;&gt;Blockchain Commons Internship Introduces New Developers to Open Source (Coindesk)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SPOTBIT. One of our major intern team projects was the creation of &lt;a href=&quot;http://www.spotbit.info&quot;&gt;Spotbit&lt;/a&gt;, now in late alpha and already in use by our &lt;a href=&quot;http://www.GordianWallet.com&quot;&gt;Gordian Wallet&lt;/a&gt;. This is an anonymized price-data system that makes use of Tor, so that you can maintain the same level of privacy when accessing price data as you can when transacting Bitcoins. It is live at a &lt;a href=&quot;h6zwwkcivy2hjys6xpinlnz2f74dsmvltzsd4xb42vinhlcaoe7fdeqd.onion&quot;&gt;Tor .onion site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CRYPTO LIBRARIES. We have moved many of our C-language cryptographic libraries to feature-complete beta status. This includes our &lt;a href=&quot;https://github.com/BlockchainCommons/bc-crypto-base&quot;&gt;bc-crypto-base&lt;/a&gt;, &lt;a href=&quot;https://github.com/blockchainCommons/bc-shamir/&quot;&gt;bc-shamir&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/bc-sskr&quot;&gt;bc-sskr&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/bc-bip39&quot;&gt;bc-bip39&lt;/a&gt;, and &lt;a href=&quot;https://github.com/BlockchainCommons/bc-ur&quot;&gt;bc-ur&lt;/a&gt; libraries.&lt;/p&gt;

&lt;p&gt;SEEDTOOL. We simultaneously upgraded our &lt;a href=&quot;https://github.com/blockchainCommons/bc-seedtool-cli&quot;&gt;seedtool&lt;/a&gt; command-line tool to feature-complete beta status. This is the showcase for our crypto libraries, as well as a handy seed generation and conversion tool in its own right. Our move to beta status for seedtool was done after we replaced SLIP39 technology with our own SSKR technology, due to our discovery of a major flaw in SLIP39 that makes it incompatible with BIP39.&lt;/p&gt;

&lt;p&gt;KEYTOOL: We have released the first alpha of the &lt;a href=&quot;https://github.com/blockchainCommons/bc-keytool-cli&quot;&gt;keytool&lt;/a&gt; command-line tool, which offers all the various complex conversions of seeds (from seedtool) to derive master keys, descriptors, and public and private keys for use with cryptocurrencies and digital identity.&lt;/p&gt;

&lt;p&gt;URKIT. We also created &lt;a href=&quot;https://github.com/BlockchainCommons/URKit&quot;&gt;URKit&lt;/a&gt; as another working example of our bc-ur cryptolibrary, including additional functionality not found in Seedtool, such as animated QRs (see this &lt;a href=&quot;https://www.youtube.com/watch?v=t-GGZ9FyuT8&quot;&gt;YouTube demo&lt;/a&gt; and &lt;a href=&quot;https://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-014-urs-on-epaper.md&quot;&gt;our paper&lt;/a&gt; on running URs on e-paper displays). This has led to one of our first community successes, as Foundation Devices has ported &lt;a href=&quot;https://github.com/BlockchainCommons/bc-ur&quot;&gt;bc-ur&lt;/a&gt; to &lt;a href=&quot;https://github.com/Foundation-Devices/foundation-ur-py&quot;&gt;Python&lt;/a&gt;, which will enable them to support our emerging animated QR standard. URKit is also being integrated into the Gordian Wallet this week.&lt;/p&gt;

&lt;p&gt;LETHEKIT. We are finalizing our second major release of &lt;a href=&quot;https://LetheKit.com&quot;&gt;LetheKit&lt;/a&gt; so that it supports all the same features as found in our feature-complete Seedtool. We expect to see that work done within the first few weeks of Q4.&lt;/p&gt;

&lt;p&gt;THE GORDIAN SYSTEM. Our Tor-connected wallet and full node (formerly known as Fully Noded 2 and Bitcoin Standup for Mac) got a rename, but more notably we’ve been expanding the whole system. Our wallet is completing its integration with the newest QR and UR code found in our libraries, while Gordian Server now allows the option of installing Blockstream’s C-Lighting, and our Linux Bitcoin Standup scripts can install other optional bitcoin-related services, including C-Lightning, LND, BTCPay, Esplora and Spotbit. We have also created Catalyst frameworks for Tor and LibWally that allow for simultaneous development of Mac and iOS apps, so we now have a late alpha of the Gordian Wallet available for macOS based on our more mature Gordian Wallet for iOS codebase.&lt;/p&gt;

&lt;p&gt;WALLET STANDARDS: We’ve begun hosting a strong collaboration in our &lt;a href=&quot;https://github.com/BlockchainCommons/Airgapped-Wallet-Community&quot;&gt;Airgapped Wallet Community&lt;/a&gt;, to support finalizing the design of these next-generation wallet interoperability features and standards. Our QuickConnect to Tor feature has been adopted by full node vendors BTCPayServer, Nodl, MyNode, and RaspiBlitz. Our Account Map proposal has been adopted by Specter, BlueWallet, Magical Bitcoin Wallet. We have successfully managed multisig interoperability demos with other wallets, including Cold Card, Electrum, Cobovault, Foundation Devices. There’s much more to come.&lt;/p&gt;

&lt;p&gt;LEARNING BITCOIN FROM THE COMMAND LINE. Our popular &lt;a href=&quot;https://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line&quot;&gt;Learning Bitcoin&lt;/a&gt; course saw a massive leap forward, with the whole course updated to Bitcoin 0.20.1 and new sections written on SegWit, Bech32, descriptors, PSBTs, BTCDeb, HWI, and Tor. We also closed out three updated chapters on coding in a variety of programming languages, including supporting Libwally with C. All that’s left before completing v2.0 of the course are two new chapters on Lightning, which have been drafted, but not fully edited. Many of these updates received support from our summer interns. We should be able to announce the completion of v2 of the course in just a few weeks.&lt;/p&gt;

&lt;p&gt;OPEN DEVELOPMENT &amp;amp; PATENTS: In addition to offering all of our new code this quarter under the &lt;a href=&quot;https://spdx.org/licenses/BSD-2-Clause-Patent.html&quot;&gt;spdx:BSD-2-Clause Plus Patent License&lt;/a&gt;, we have published examples of our &lt;a href=&quot;https://github.com/blockchainCommons/open-development&quot;&gt;open development legal resources&lt;/a&gt;, including our contributor license and our open software developer, internship, and security services agreements. We have also joined &lt;a href=&quot;https://open-patent.org&quot;&gt;COPA&lt;/a&gt; (the Crypto Open Patent Alliance), as the best current solution to our long-standing commitment to a defensive patent strategy.&lt;/p&gt;

&lt;p&gt;LEGISLATION &amp;amp; REGULATION: Blockchain Commons Founder Christopher Allen has spoken and given written testimony several times before the &lt;a href=&quot;https://wyoleg.gov/Committees/2020/S19&quot;&gt;Wyoming Select Committee on Blockchain, Financial Technology and Digital Innovation Technology&lt;/a&gt;. This summer, he was appointed as a member of two sub-committees: Digital Identity, working on a legal definition for Digital Identity under self-sovereign principles; and DAOs, working on making new forms of blockchain-enabled corporations acceptable in Wyoming.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Written Testimony:
  * 2020 Wyoming Blockchain Legislative Agenda: https://wyoleg.gov/InterimCommittee/2020/S19-20200522Wyoming2020LegislationAgendaLetter-ChristopherAllen.pdf
  * 2020 Wyoming Identity Legislation Agenda: https://wyoleg.gov/InterimCommittee/2020/S19-20200612Wyoming2020IdentityLegislationAgendaLetter-ChristopherAllen.pdf&lt;/li&gt;
  &lt;li&gt;Draft Legislation
    * HB0041 - Disclosure of private cryptographic keys: https://wyoleg.gov/Legislation/2020/HB0041
    * Digital Identity Legal Definition: https://wyoleg.gov/InterimCommittee/2020/S19-202009233-01DigitalIdentityDraftingGuidance.pdf&lt;/li&gt;
  &lt;li&gt;Videos:
    * 2020-06-12: https://youtu.be/91ZA8rppgSA
    * 2020-07-27: https://www.youtu.be/wTQOgkcZ41o &amp;amp; https://www.youtu.be/watch?v=ASWzQoLqvWg
    * 2020-08-25: https://youtu.be/oyYNUKSJ4Go &amp;amp; https://youtu.be/qZtW3eXSbtg
    * 2020-09-23: https://www.youtu.be/o2yMs_I5Sn0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for your support of the Blockchain Commons this year!&lt;/p&gt;

&lt;p&gt;We’re determined to expand on these and other projects, to make Bitcoin and the blockchain easier to use for everyone. Thus, we’re already getting started on our Q4 work, which we hope to include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The move of the Gordian system beta to support Bitcoin mainnet (aka “real money”).&lt;/li&gt;
  &lt;li&gt;The publication of a GordianSigner app to the iPhone, Mac and Google Appstores, and (hopefully) the iOS Appstore approval of Gordian Wallet.&lt;/li&gt;
  &lt;li&gt;The release of our first Android app, GordianSigner, allowing more parties to participate in multisig transactions.&lt;/li&gt;
  &lt;li&gt;The publication of the second edition of our popular #SmartCustody Book, including reorganizing the text to make it more approachable, expanding our options to more kinds of hardware wallets, updating old scenarios, introducing new scenarios for multi-sigs, and covering the use of the well-reviewed Gnosis Ethereum smart contract.&lt;/li&gt;
  &lt;li&gt;The creation of signtool and verifytool apps to supplement keytool, leveraging the latest HD and Schnorr signature technologies and adding to our erector set of command-line app companions to seedtool.&lt;/li&gt;
  &lt;li&gt;The continued discussion and deployment of new airgapped wallet standards such as animated QR-based PSBTs.&lt;/li&gt;
  &lt;li&gt;A push forward on decentralized identity, beginning with the integration of PSBT &amp;amp; JSON-LD 1.1 signing into signtool.&lt;/li&gt;
  &lt;li&gt;A new externship program, where a company lends us an engineer to work on Blockchain Commons priorities and in turn learns about our work and the open-source community.&lt;/li&gt;
  &lt;li&gt;Evangelization to developers about code and projects completed in Q3 such as Spotbit, Learning Bitcoin, seedtool, and LetheKit.&lt;/li&gt;
  &lt;li&gt;Other open infrastructure activities, such as new regional Tor exit node (our first &lt;a href=&quot;https://metrics.torproject.org/rs.html#details/644074F47257F9A906F9AA5C6B8926C1540A1DA8&quot;&gt;Tor exit node&lt;/a&gt; is now over year old!), did:tor DID (W3C Decentralized Identifier) method, and other Tor-based human-rights privacy tools and services.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, this all requires support, so we encourage you to spread the word, to use your business and community contacts to bring in other people as &lt;a href=&quot;https://github.com/sponsors/BlockchainCommons&quot;&gt;Patrons&lt;/a&gt; at any level. We know that we’re offering important work here, and we want to be able to continue that work for the community.&lt;/p&gt;

&lt;p&gt;Christopher Allen, Executive Director, Blockchain Commons&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Quarterlies" /><category term="Goals" /><category term="Philosophies" /><category term="Projects" /><summary type="html">In summer 2020 (Q3), Blockchain Commons really came together as both a professional organization and as a collective to support open infrastructure for blockchain. This quarter, in addition to the ongoing financial contributions from our Sustaining Patrons, we’ve begun receiving our first funds from Github Sponsors, which has totaled more than $8,000 to date, including mostly contributions from small sponsors. We’ve in turn been able to use those additional funds on a wider variety of projects. Simultaneously, we’ve also been revising our vision, strategy, marketing, and branding plan, to both set the future of Blockchain Commons and to explain its benefits to the wider world.</summary></entry><entry><title type="html">Announcing Blockchain Discussion FOrum</title><link href="https://www.blockchaincommons.com/discussion/Announcing-Blockchain-Discussion/" rel="alternate" type="text/html" title="Announcing Blockchain Discussion FOrum" /><published>2020-09-15T00:00:00+00:00</published><updated>2020-09-15T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/discussion/Announcing-Blockchain%20Discussion</id><content type="html" xml:base="https://www.blockchaincommons.com/discussion/Announcing-Blockchain-Discussion/">&lt;p&gt;Blockchain Commons has been accepted into the new GitHub discussion program, allowing for more freeform discussions within the context of our GitHub repos. As we are a GitHub-centric organization, we are now using this as the main venue for discussions about philosophies, goals, standards, and projects. Please join us!&lt;/p&gt;

&lt;p&gt;We are currently focusing on three different discussion areas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BlockchainCommons/Gordian/discussions&quot;&gt;Gordian System Discussions&lt;/a&gt; — for users and developers of the Gordian system, including the Gordian Server, Bitcoin Standup technology, QuickConnect, and the Gordian Wallet. If you want to talk about our linked full-node and wallet technology, suggest new additions to our Bitcoin Standup standards, or discuss the implementation our standalone wallet, the Discussions area of the &lt;a href=&quot;https://github.com/BlockchainCommons/Gordian&quot;&gt;main Gordian repo&lt;/a&gt; is the place.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BlockchainCommons/AirgappedSigning/discussions&quot;&gt;Wallet Standard Discussions&lt;/a&gt; — for standards and open-source developers who want to talk about wallet standards, please use the Discussions area of the &lt;a href=&quot;https://github.com/BlockchainCommons/AirgappedSigning&quot;&gt;Airgapped Signing repo&lt;/a&gt;. This is where you can talk about projects like our &lt;a href=&quot;https://github.com/BlockchainCommons/bc-lethekit&quot;&gt;LetheKit&lt;/a&gt; and command line tools such as &lt;a href=&quot;https://github.com/BlockchainCommons/bc-seedtool-cli&quot;&gt;seedtool&lt;/a&gt;, both of which are intended to testbed wallet technologies, plus the libraries that we’ve built to support your own deployment of wallet technology such as &lt;a href=&quot;https://github.com/BlockchainCommons/bc-bip39&quot;&gt;bc-bip39&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/bc-slip39&quot;&gt;bc-slip39&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/bc-shamir&quot;&gt;bc-shamir&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/bc-sskr&quot;&gt;Shamir Secret Key Recovery&lt;/a&gt;, &lt;a href=&quot;https://github.com/BlockchainCommons/bc-ur&quot;&gt;bc-ur&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/BlockchainCommons/bc-crypto-base&quot;&gt;bc-crypto-base&lt;/a&gt;. If it’s a wallet-focused technology or a more general discussion of wallet standards,discuss it here.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BlockchainCommons/Community/discussions&quot;&gt;Blockchain Commons Discussions&lt;/a&gt; — for developers, interns, and patrons of Blockchain Commons, please use the discussions area of the &lt;a href=&quot;https://github.com/BlockchainCommons/Community&quot;&gt;Community repo&lt;/a&gt; to talk about general Blockchain Commons issues, the intern program, or topics other than the &lt;a href=&quot;https://github.com/BlockchainCommons/Gordian/discussions&quot;&gt;Gordian System&lt;/a&gt; or the &lt;a href=&quot;https://github.com/BlockchainCommons/AirgappedSigning/discussions&quot;&gt;wallet standards&lt;/a&gt;, each of which have their own discussion areas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We of course will continue to use the Issues and the PR features of GitHub for discussions of repo-focused topics and for individual fixes, respectively, but the discussion areas are a great place to talk about more general topics.&lt;/p&gt;

&lt;p&gt;Come join us in our new Blockchain Commons community!&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Discussion" /><category term="Goals" /><category term="Philosophies" /><category term="Projects" /><summary type="html">Blockchain Commons has been accepted into the new GitHub discussion program, allowing for more freeform discussions within the context of our GitHub repos. As we are a GitHub-centric organization, we are now using this as the main venue for discussions about philosophies, goals, standards, and projects. Please join us! We are currently focusing on three different discussion areas: Gordian System Discussions — for users and developers of the Gordian system, including the Gordian Server, Bitcoin Standup technology, QuickConnect, and the Gordian Wallet. If you want to talk about our linked full-node and wallet technology, suggest new additions to our Bitcoin Standup standards, or discuss the implementation our standalone wallet, the Discussions area of the main Gordian repo is the place. Wallet Standard Discussions — for standards and open-source developers who want to talk about wallet standards, please use the Discussions area of the Airgapped Signing repo. This is where you can talk about projects like our LetheKit and command line tools such as seedtool, both of which are intended to testbed wallet technologies, plus the libraries that we’ve built to support your own deployment of wallet technology such as bc-bip39, bc-slip39, bc-shamir, Shamir Secret Key Recovery, bc-ur, and the bc-crypto-base. If it’s a wallet-focused technology or a more general discussion of wallet standards,discuss it here. Blockchain Commons Discussions — for developers, interns, and patrons of Blockchain Commons, please use the discussions area of the Community repo to talk about general Blockchain Commons issues, the intern program, or topics other than the Gordian System or the wallet standards, each of which have their own discussion areas. We of course will continue to use the Issues and the PR features of GitHub for discussions of repo-focused topics and for individual fixes, respectively, but the discussion areas are a great place to talk about more general topics. Come join us in our new Blockchain Commons community!</summary></entry><entry><title type="html">Announcing Open Source Bitcoin Framework for iOS</title><link href="https://www.blockchaincommons.com/projects/Announcing-Open-Source-Bitcoin-iOS-Framework/" rel="alternate" type="text/html" title="Announcing Open Source Bitcoin Framework for iOS" /><published>2019-01-25T00:00:00+00:00</published><updated>2019-01-25T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/projects/Announcing-Open-Source-Bitcoin-iOS-Framework</id><content type="html" xml:base="https://www.blockchaincommons.com/projects/Announcing-Open-Source-Bitcoin-iOS-Framework/">&lt;h3 id=&quot;building-on-libbitcoin&quot;&gt;Building on Libbitcoin&lt;/h3&gt;

&lt;p&gt;Today we are announcing the availability of the open source &lt;a href=&quot;https://github.com/BlockchainCommons/iOS-Bitcoin&quot;&gt;Bitcoin framework for iOS&lt;/a&gt;. We have been working with veteran iOS developer &lt;a href=&quot;https://wolfmcnally.com/125/announcing-open-source-bitcoin-framework-for-ios/&quot;&gt;Wolf McNally&lt;/a&gt; on wallet apps for iOS that will support airgapped transaction signing and &lt;a href=&quot;https://w3c-ccg.github.io/didm-btcr/&quot;&gt;BTCR Decentralized Identity (DID)&lt;/a&gt;. As part of this effort we chose to build on the open source &lt;a href=&quot;https://libbitcoin.org/&quot;&gt;libbitcoin&lt;/a&gt; library.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;from-c-to-swift&quot;&gt;From C++ to Swift&lt;/h3&gt;

&lt;p&gt;Libbitcoin is written in C++. This poses a problem for incorporating it into native iOS apps: there is no straightforward way to import C++ code into Swift. Swift does interface fairly easily to straight C, however. So to bridge the gap we wrote two frameworks: &lt;a href=&quot;https://github.com/BlockchainCommons/iOS-CBitcoin&quot;&gt;CBitcoin&lt;/a&gt;, which exports a C-based interface from libbitcoin, and &lt;a href=&quot;https://github.com/BlockchainCommons/iOS-Bitcoin&quot;&gt;Bitcoin&lt;/a&gt;, which builds on CBitcoin to export a clean Swift interface to libbitcoin.&lt;/p&gt;

&lt;p&gt;Since the purpose of these two frameworks is primarily to facilitate building cryptocurrency wallets on iOS, we haven’t (so far) had a need to export parts of libbitcoin that are useful primarily to Bitcoin nodes. Pull requests are welcome!&lt;/p&gt;

&lt;p&gt;Building libbitcoin for iOS is no simple task. It has two other dependencies: &lt;a href=&quot;https://github.com/bitcoin-core/secp256k1&quot;&gt;libsecp256k1&lt;/a&gt;,  which handles the &lt;a href=&quot;https://en.wikipedia.org/wiki/Elliptic-curve_cryptography&quot;&gt;elliptic curve cryptography&lt;/a&gt; and &lt;a href=&quot;https://www.boost.org/&quot;&gt;libboost&lt;/a&gt;, which is a large toolkit for writing better C++. These and libbitcoin itself have to be built as fat binaries for two ARM architectures for running on the iPhone, native MacOS, and another version for running on MacOS under the iOS simulator. For this we built on the open source work of &lt;a href=&quot;https://en.bitcoin.it/wiki/Airbitz&quot;&gt;Airbitz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once the binaries are built, they have to be combined into fat binaries and then bundled into frameworks. We provide a &lt;a href=&quot;https://github.com/BlockchainCommons/iOS-CBitcoin/blob/master/build_frameworks.sh&quot;&gt;Bash shell script to coordinate these steps&lt;/a&gt;. The build takes over half an hour on a Mac Pro, so to save others the time my script zips up the resulting frameworks and checks them into GitHub too. &lt;em&gt;However&lt;/em&gt;, the zipped frameworks exceed GitHub’s file size limit, but it turns out they also have a solution: &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;Git Large File Storage&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;use-now-with-cocoapods&quot;&gt;Use Now with Cocoapods&lt;/h3&gt;

&lt;p&gt;The final frameworks are deployed as &lt;a href=&quot;https://cocoapods.org/&quot;&gt;Cocoapods&lt;/a&gt;, and the Bitcoin framework is the only one you need to reference directly in your iOS app, by including:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bitcoin'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Podfile&lt;/code&gt;, and:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bitcoin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.swift&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;Unit tests are in the Bitcoin framework &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Example&lt;/code&gt; target. All the detailed instructions are in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; for the &lt;a href=&quot;https://github.com/BlockchainCommons/iOS-Bitcoin&quot;&gt;Bitcoin framework&lt;/a&gt;.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Projects" /><category term="Projects" /><category term="Bitcoin" /><category term="Distributed Identity" /><category term="BTCR" /><summary type="html">Building on Libbitcoin Today we are announcing the availability of the open source Bitcoin framework for iOS. We have been working with veteran iOS developer Wolf McNally on wallet apps for iOS that will support airgapped transaction signing and BTCR Decentralized Identity (DID). As part of this effort we chose to build on the open source libbitcoin library.</summary></entry><entry><title type="html">First #SmartCustody Workshop: Simple Cold Storage &amp;amp; Self-Custody</title><link href="https://www.blockchaincommons.com/projects/First-SmartCustody-Workshop-Simple-Cold-Storage-and-Self-Custody/" rel="alternate" type="text/html" title="First #SmartCustody Workshop: Simple Cold Storage &amp;amp; Self-Custody" /><published>2019-01-04T00:00:00+00:00</published><updated>2019-01-04T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/projects/First-SmartCustody-Workshop-Simple-Cold-Storage-and-Self-Custody</id><content type="html" xml:base="https://www.blockchaincommons.com/projects/First-SmartCustody-Workshop-Simple-Cold-Storage-and-Self-Custody/">&lt;p&gt;Our first #SmartCustody workshop will be on Tue, January 29, 2019, 10:00 AM – 4:00 PM PST, at 554 San Antonio Road, Palo Alto, CA 94040-1217, &lt;a href=&quot;https://www.eventbrite.com/e/smartcustody-simple-cold-storage-self-custody-workshop-tickets-54426618481#map-target&quot;&gt;Map&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can signup for the Workshop on &lt;a href=&quot;https://www.eventbrite.com/e/smartcustody-simple-cold-storage-self-custody-workshop-tickets-54426618481&quot;&gt;EventBrite&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;This is the first of three different #SmartCustody workshops. This workshop is designed for individual holders of digital assets, in particular cryptocurrency traders and those high net-worth individuals who are already familiar &amp;amp; working with digital assets, but are seeking to learn best practices for protecting themselves and their business from theft, fraud, or loss.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are you considering all possible threats to your digital assets?&lt;/li&gt;
  &lt;li&gt;Do you have comprehensive procedures to assess your risk profile?&lt;/li&gt;
  &lt;li&gt;How does your system stack up against others in industry?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Future workshops will be focused on holders of digital assets that have fiduciary responsibility to others, such as small investment funds &amp;amp; family firms, or those who are required to use third-party qualified custodians for management of digital assets due to the amount of funds held.&lt;/p&gt;

&lt;p&gt;These #SmartCustody workshops are a project of &lt;a href=&quot;https://www.BlockchainCommons.com&quot;&gt;Blockchain Commons&lt;/a&gt;, which supports blockchain infrastructure, internet security &amp;amp; cryptographic research.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;what-you-can-expect-to-learn&quot;&gt;What you can expect to learn&lt;/h2&gt;

&lt;p&gt;The day will cover leading practices for the industry as well as advanced concepts, including but not limited to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A simple cold-storage scenario, with detailed checklist&lt;/li&gt;
  &lt;li&gt;Detailed case studies of 24 digital asset “Adversaries”&lt;/li&gt;
  &lt;li&gt;Digital asset risk modeling &amp;amp; example scenarios&lt;/li&gt;
  &lt;li&gt;Hardware &amp;amp; service selection&lt;/li&gt;
  &lt;li&gt;Presentations &amp;amp; materials from leading cryptocustody companies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The day will conclude with an open salon to discuss open questions and options for future collaboration across the industry.&lt;/p&gt;

&lt;h2 id=&quot;speakers&quot;&gt;Speakers&lt;/h2&gt;

&lt;h3 id=&quot;christopher-allen&quot;&gt;Christopher Allen&lt;/h3&gt;

&lt;h4 id=&quot;founder-executive-director-blockchain-commons&quot;&gt;Founder, Executive Director, Blockchain Commons&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Co-author of TLS, widest deployed security standard&lt;/li&gt;
  &lt;li&gt;Founder #RebootingWebOfTrust&lt;/li&gt;
  &lt;li&gt;Previously Principal Architect of Blockstream&lt;/li&gt;
  &lt;li&gt;Former CTO of Certicom&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bryan-bishop&quot;&gt;Bryan Bishop&lt;/h3&gt;

&lt;h4 id=&quot;digital-asset-consultant&quot;&gt;Digital Asset Consultant&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Bitcoin Core Contributor&lt;/li&gt;
  &lt;li&gt;Former Chief Architect, Custody, LedgerX&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;angus-champion-de-crespigny&quot;&gt;Angus Champion De Crespigny&lt;/h3&gt;

&lt;h4 id=&quot;advisor&quot;&gt;Advisor&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Previously Financial Services Blockchain Leader, EY&lt;/li&gt;
  &lt;li&gt;11 years of financial services experience across custody, compliance, cybersecurity, strategy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;agenda&quot;&gt;Agenda&lt;/h2&gt;

&lt;p&gt;9:30am: Registration &amp;amp; Coffee&lt;/p&gt;

&lt;p&gt;10:00am: Workshop begins: Fundamentals of digital assets, keys, and self-custody&lt;/p&gt;

&lt;p&gt;10:30am: Detailed review of Simple Cold Storage Scenario &amp;amp; Checklist&lt;/p&gt;

&lt;p&gt;11:00am: Digital Asset “Adversaries” and Case Studies Discussion&lt;/p&gt;

&lt;p&gt;12:00pm: Lunch (provided)&lt;/p&gt;

&lt;p&gt;1:00pm: Intro to Digital Asset Risk Modeling&lt;/p&gt;

&lt;p&gt;1:30pm: Demo of Self-Custody Digital Risk Model&lt;/p&gt;

&lt;p&gt;2:00pm: Demo and live discussion of various digital asset wallets and custody hardware&lt;/p&gt;

&lt;p&gt;2:30pm: Break&lt;/p&gt;

&lt;p&gt;3:00pm: Salon to address open questions/missing requirements&lt;/p&gt;

&lt;p&gt;4:00pm: Close&lt;/p&gt;

&lt;h2 id=&quot;price&quot;&gt;Price&lt;/h2&gt;

&lt;p&gt;$2,000 includes the workshop, handouts, and other self-custody related materials. There are a couple $1,000 tickets for registered non-profits that accept or manage cryptocurrency. Contact &lt;a href=&quot;mailto:ChristopherA@LifeWithAlacrity.com&quot;&gt;Christopher Allen&lt;/a&gt; if you wish to pay via cryptocurrency.&lt;/p&gt;

&lt;h2 id=&quot;future-events--mailing-list&quot;&gt;Future Events &amp;amp; Mailing List&lt;/h2&gt;

&lt;p&gt;If you wish to be notified about future #SmartCustody workshops, events, guides, books, etc. you can subscribe to our &lt;a href=&quot;https://tinyletter.com/smartcustody&quot;&gt;Announcements Mailing List&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;hosted-by&quot;&gt;Hosted By&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.BlockchainCommons.com&quot;&gt;&lt;img src=&quot;/images/blockchain-commons-logo.png&quot; alt=&quot;blockchain-commons-logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.blockchaincommons.com/&quot;&gt;Blockchain Commons&lt;/a&gt;: “Supporting Blockchain Infrastructure, Internet Security &amp;amp; Cryptographic Research”&lt;/p&gt;

&lt;h2 id=&quot;sponsored-by&quot;&gt;Sponsored by&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.adamantcapitalfund.com/&quot;&gt;&lt;img src=&quot;/images/adamant-capital-logo-with-background.png&quot; alt=&quot;adamant-capital-logo-with-background&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.adamantcapitalfund.com/&quot;&gt;Adamant Capital&lt;/a&gt;: Bitcoin Alpha Fund. Responsibly outperform Bitcoin in a tax-efficient manner.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https:blockstream.com&quot;&gt;&lt;img src=&quot;/images/blockstream-logo.png&quot; alt=&quot;blockstream-logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blockstream.com/&quot;&gt;Blockstream&lt;/a&gt;: “Rethinking Trust, Global Leader in Bitcoin and blockchain technology”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.co/hsLxiZdQya&quot;&gt;&lt;img src=&quot;/images/cryptoasset-inheritance-planning-cover.png&quot; alt=&quot;cryptoasset-inheritance-planning-cover&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.co/hsLxiZdQya&quot;&gt;Cryptoasset Inheritance Planning&lt;/a&gt;: by Pamela Morgan “What happens to my bitcoin, ether, or other cryptoassets when I die?”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cryptotag.io/&quot;&gt;&lt;img src=&quot;/images/crypto-tag-logo.png&quot; alt=&quot;crypto-tag-logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cryptotag.io/&quot;&gt;CRYPTOTAG&lt;/a&gt;: We got your backup. Your crypto recovery seed and private keys forever stored in pure Titanium.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://contract.design&quot;&gt;&lt;img src=&quot;/images/dcd-logo.png&quot; alt=&quot;dcd-logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://contract.design&quot;&gt;Digital Contract Design&lt;/a&gt;: Contracts with trust minimization.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ledger.com/&quot;&gt;&lt;img src=&quot;/images/ledger-logo.png&quot; alt=&quot;ledger-logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ledger.com/&quot;&gt;Ledger&lt;/a&gt;: “Developing security and infrastructure solutions for cryptocurrencies”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.winstead.com/Practices/Corporate-SecuritiesMA/Fintech-Cryptocurrencies-Emerging-Technologies&quot;&gt;&lt;img src=&quot;/images/winstead-logo.png&quot; alt=&quot;winstead-logo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.winstead.com/Practices/Corporate-SecuritiesMA/Fintech-Cryptocurrencies-Emerging-Technologies&quot;&gt;Winstead&lt;/a&gt;: “We counsel investment funds and entrepreneurs on digital assets”&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Projects" /><category term="Projects" /><category term="Smart Custody" /><category term="Workshop" /><summary type="html">Our first #SmartCustody workshop will be on Tue, January 29, 2019, 10:00 AM – 4:00 PM PST, at 554 San Antonio Road, Palo Alto, CA 94040-1217, Map. You can signup for the Workshop on EventBrite. Overview This is the first of three different #SmartCustody workshops. This workshop is designed for individual holders of digital assets, in particular cryptocurrency traders and those high net-worth individuals who are already familiar &amp;amp; working with digital assets, but are seeking to learn best practices for protecting themselves and their business from theft, fraud, or loss. Are you considering all possible threats to your digital assets? Do you have comprehensive procedures to assess your risk profile? How does your system stack up against others in industry? Future workshops will be focused on holders of digital assets that have fiduciary responsibility to others, such as small investment funds &amp;amp; family firms, or those who are required to use third-party qualified custodians for management of digital assets due to the amount of funds held. These #SmartCustody workshops are a project of Blockchain Commons, which supports blockchain infrastructure, internet security &amp;amp; cryptographic research.</summary></entry><entry><title type="html">Project Proposal: New Social Social Key Recovery Approach</title><link href="https://www.blockchaincommons.com/proposals/Project-Proposal-New-Social-Key-Recovery-Approach/" rel="alternate" type="text/html" title="Project Proposal: New Social Social Key Recovery Approach" /><published>2018-11-19T00:00:00+00:00</published><updated>2018-11-19T00:00:00+00:00</updated><id>https://www.blockchaincommons.com/proposals/Project-Proposal-New-Social-Key-Recovery-Approach</id><content type="html" xml:base="https://www.blockchaincommons.com/proposals/Project-Proposal-New-Social-Key-Recovery-Approach/">&lt;p&gt;The goal of social key recovery is for the user to specify groups of individuals that together possess the ability to recover the root secret of a wallet. A good social key recovery protocol should not just reflect what cryptographic primitives happen to be available for use, but rather instead should be designed to correspond with the structure of trust in the user’s social network, while balancing the technical tradeoffs involved under the hood.&lt;/p&gt;

&lt;p&gt;The most popular social key recovery algorithm, &lt;a href=&quot;https://dl.acm.org/citation.cfm?doid=359168.359176&quot;&gt;Shamir Secret Sharing&lt;/a&gt; is considered information-theoretically secure. That is, any combination of shares less than the necessary threshold convey absolutely no information about the secret. However, all secrets have equal weight and once a sufficient threshold is achieved the secret can be reconstructed. In social contexts this can cause a number of problems in common real-world scenarios. In addition, Shamir Secret Sharing has a history of being &lt;a href=&quot;https://crypto.stackexchange.com/questions/41994/why-is-shamir-secret-sharing-not-secure-against-active-adversaries-out-of-the-bo&quot;&gt;naively implemented&lt;/a&gt; including a number of serious &lt;a href=&quot;https://github.com/spesmilo/electrum-docs/blob/master/cve.rst&quot;&gt;vulnerabilities&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To quote Bitcoin Core Developer &lt;a href=&quot;https://github.com/gmaxwell&quot;&gt;Greg Maxwell&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I think Shamir Secret Sharing (and a number of other things, RNGs for example), suffer from a property where they are just complex enough that people are excited to implement them often for little good reason, and then they are complex enough (or have few enough reasons to invest significant time) they implement them poorly.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ideally an implementation of social key recovery should balancing numerous competing goals:&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt; * Key recovery should require approval of many individuals so as to minimize potential for theft or deliberate key compromise by a small malicious subset of users.&lt;/p&gt;

&lt;p&gt; * Key recovery should require the smallest acceptable threshold so as to prevent loss of funds from destroyed/lost/inaccessible shares.&lt;/p&gt;

&lt;p&gt; * Key recovery requiring interaction with too many individuals is undesirable, as each interaction must involve re-authentication at the inconvenience of all involved.&lt;/p&gt;

&lt;p&gt; * Social trust is not uniformly distributed among different social circles, such as friends, business acquaintances, and family.  Individuals may be fungible within a certain circle of trust, but not more broadly.  A “family member” is not the same as a “business partner.”&lt;/p&gt;

&lt;p&gt;For example, Alice might want a minimum of three people to sign off on a key recovery attempt, with individuals chosen among her friends, family, and close business partners.  More than 3 would be inconvenient and risk loss of funds, while any combination of less than 3 individuals would not be trustworthy. However some combinations of 3 individuals drawn from this entire set would not be reliable: she wouldn’t want her 3 business partners alone having control over her funds, as they may act maliciously in their shared business interests and not for her.&lt;/p&gt;

&lt;p&gt;One solution for Alice is to require 3 individuals for social key recovery, but also require that these three individuals include AT LEAST one friend and one family member.&lt;/p&gt;

&lt;p&gt;This can be accomplished by constructing a three-way linear key split with shares X, Y, and Z. X is given to family members, Y is given to friends, and Z is further split using 3-of-N Shamir secret sharing, with unique shares given to each family member, friend, and trusted business partner.  Thus each family member knows X and one share of Z, each friend knows Y and one share of Z, and business partners only know their share of Z.  As the original key is constructed as X+Y+Z, all three must be reconstructed, which requires the assistance of at least one family member, at least one friend, and a total of three individuals drawn from all three sets.&lt;/p&gt;

&lt;p&gt;We suggest calling these separate groups of individuals “circles,” and we suggest designing a social key recovery system where users are allowed to specify participation thresholds for the recovery of the key split associated with each circle (3 “friends” are required, 2 “business partners”, etc.), and then also specify which circle thresholds are required in disjunctive normal form–e.g. “Friends AND Family” OR “Family AND Coworkers”.  Under the hood this is translated into a set of linear key splits and Shamir secret shares that are encrypted and transmitted to each participant.&lt;/p&gt;

&lt;p&gt;Longer term on the hardware side, an HSM with secure I/O for user authentication could be used to perform the social key recovery — a potential early place to implement this is the HTC Exodus cryptocurrency phone.  When a user attempts key recovery, they present a fresh set of identity keys to their friend/family/coworker/etc. and authenticate themselves to the individual.  If the individual is convinced to participate, they authorize their device to reveal their shares, which is done by decrypting on the HSM and then re-encrypting to the temporary identity keys of the user’s new or wiped device. When a user does this with enough shares to reconstruct the original key, their device automatically does so and retires the temporary identity, replacing with the recovered master key.&lt;/p&gt;

&lt;p&gt;In terms of cryptographic implementation, this requires combining Shamir secret sharing with linear key splits, and then building a social key recovery API centered around the recovery protocol rather than the cryptographic primitives. It will also require some work in defining serialization formats and web-of-trust public key infrastructure for encryption and authentication of the key splits both at the time of distribution and recovery, as well as some thoughts on best ways to store keyshares offline.&lt;/p&gt;

&lt;p&gt;Milestones: Stage 1 would be a review of newer academic papers on improvements to Shamir Secret Sharing as well as linear key splits, for which we are project costs of $15K. Stage 2 would be a specific proposal that we can submit to arXiv and/or academic conferences regarding our specific new proposal, for which we are budgeting an additional $15K.&lt;/p&gt;

&lt;p&gt;The remaining stages are code. In Stage 3, a preliminary secure implementation of the underlying cryptography for this proposal such that we can get code review by various parties. We estimate this to be approximately $75K - $90K. In Stage 4, we pay ~ $30K-$40K for a formal independent review of the code by an outside party. In stage 5, we implement a UI version of this for the iPhone for ~$50K. None of these stages would implementation be for secure hardware such as for TrustZone (HTC) or TinyPython for Ledger, or other secure hardware, but would include architectural considerations for such in the future.&lt;/p&gt;

&lt;p&gt;If you are interested in supporting this Blockchain Commons project, contact Christopher Allen «ChristopherA@LifeWithAlacrity.com».&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Shamir, Adi (1979). “How to share a secret”. Communications of the ACM. 22 (11): 612–613. doi:10.1145/359168.359176. https://cs.jhu.edu/~sdoshi/crypto/papers/shamirturing.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Beimel A. (2011) Secret-Sharing Schemes: A Survey. In: Chee Y.M. et al. (eds) Coding and Cryptology. IWCC 2011. Lecture Notes in Computer Science, vol 6639. Springer, Berlin, Heidelberg https://www.cs.bgu.ac.il/~beimel/Papers/Survey.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rait, Seth (2016). “Shamir Secret Sharing and Threshold Cryptography” https://sethrait.com/Shamir-Secret-Sharing-and-Threshold-Cryptography&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dautrich J.L., Ravishankar C.V. (2012) “Security Limitations of Using Secret Sharing for Data Outsourcing. In: Cuppens-Boulahia” N., Cuppens F., Garcia-Alfaro J. (eds) Data and Applications Security and Privacy XXVI. DBSec 2012. Lecture Notes in Computer Science, vol 7371. Springer, Berlin, Heidelberg http://www.cs.ucr.edu/~ravi/Papers/DBConf/secret_sharing.pdf)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Komargodski I., Naor M., Yogev E. (2016) How to Share a Secret, Infinitely. In: Hirt M., Smith A. (eds) Theory of Cryptography. TCC 2016. Lecture Notes in Computer Science, vol 9986. Springer, Berlin, Heidelberg https://eprint.iacr.org/2016/194.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Coron JS., Prouff E., Roche T. (2013) On the Use of Shamir’s Secret Sharing against Side-Channel Analysis. In: Mangard S. (eds) Smart Card Research and Advanced Applications. CARDIS 2012. Lecture Notes in Computer Science, vol 7771. Springer, Berlin, Heidelberg https://www.ssi.gouv.fr/uploads/IMG/pdf/aesshamir_Coron_Prouff_Roche.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Blakley, G.R. (1979). “Safeguarding Cryptographic Keys”. Managing Requirements Knowledge, International Workshop on (AFIPS). 48: 313–317. doi:10.1109-/AFIPS.1979.98. https://pdfs.semanticscholar.org/32d2/1ccc21a807627fcb21ea829d1acdab23be12.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Feldman, Paul (1987) “A practical scheme for non-interactive Verifiable Secret Sharing” Proceedings of the 28th Annual Symposium on Foundations of Computer Science https://www.cs.umd.edu/~gasarch/TOPICS/secretsharing/feldmanVSS.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Harn, e,  Changlu L (2009). “Detection and identification of cheaters in (t, n) secret sharing scheme” Des. Codes Cryptography 52, 1 (July 2009), 15-24. DOI=10.1007/s10623-008-9265-8 http://dx.doi.org/10.1007/s10623-008-9265-8&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Schoenmakers, Berry (1999) “A Simple Publicly Verifiable Secret Sharing Scheme and its Application to Electronic Voting” Advances in Cryptology-CRYPTO’99, volume 1666 of Lecture Notes in Computer Science, pages 148-164, Berlin, 1999. Springer-Verlag. https://www.win.tue.nl/~berry/papers/crypto99.pdf&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rusnak, P, et. al (2018) “SLIP-0039 : Shamir’s Secret-Sharing for Mnemonic Codes” Satoshi Labs Github. https://github.com/satoshilabs/slips/blob/master/slip-0039.md&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stack Exchange (2016) “&lt;a href=&quot;https://crypto.stackexchange.com/questions/41994/why-is-shamir-secret-sharing-not-secure-against-active-adversaries-out-of-the-bo&quot;&gt;Why is Shamir Secret Sharing not secure against active adversaries out-of-the-box?&lt;/a&gt;” Stack Exchange https://crypto.stackexchange.com/questions/41994/why-is-shamir-secret-sharing-not-secure-against-active-adversaries-out-of-the-bo&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name></author><category term="Proposals" /><category term="Proposal" /><category term="Cryptographic Research" /><category term="Social Key Recovery" /><category term="Key Management" /><summary type="html">The goal of social key recovery is for the user to specify groups of individuals that together possess the ability to recover the root secret of a wallet. A good social key recovery protocol should not just reflect what cryptographic primitives happen to be available for use, but rather instead should be designed to correspond with the structure of trust in the user’s social network, while balancing the technical tradeoffs involved under the hood. The most popular social key recovery algorithm, Shamir Secret Sharing is considered information-theoretically secure. That is, any combination of shares less than the necessary threshold convey absolutely no information about the secret. However, all secrets have equal weight and once a sufficient threshold is achieved the secret can be reconstructed. In social contexts this can cause a number of problems in common real-world scenarios. In addition, Shamir Secret Sharing has a history of being naively implemented including a number of serious vulnerabilities. To quote Bitcoin Core Developer Greg Maxwell: I think Shamir Secret Sharing (and a number of other things, RNGs for example), suffer from a property where they are just complex enough that people are excited to implement them often for little good reason, and then they are complex enough (or have few enough reasons to invest significant time) they implement them poorly.” Ideally an implementation of social key recovery should balancing numerous competing goals:</summary></entry></feed>